@page
@using IoTPortal.Core.Services
@using IoTPortal.Framework.Constants
@using IoTPortal.Framework.Extensions
@model IoTPortal.Web.Pages.Device.IndexModel
@inject IDeviceService DeviceService
@{
    var canUpdateDevice = await DeviceService.CanUpdateDevice(Model.Device.Id, Model.UserId!);
    var deviceStateDisplay = Model.Device.State.GetDisplay();
}

<div class="mb-3">
    <h3>@Model.Device.Name <small class="text-info">@deviceStateDisplay.Name</small></h3>
    <h5>@Model.Device.Description</h5>
</div>

<div class="d-flex column-gap-2 mb-3">
    @if (canUpdateDevice)
    {
        <a class="btn btn-primary" asp-page="/Device/Edit" asp-route-id="@(Model.Device.Id)">Edit Device</a>
        <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#informationModal">
            Information
        </button>
    }
</div>

<ul class="nav nav-navpills mb-3" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" data-bs-toggle="pill" data-bs-target="#table" type="button" role="tab">Table</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" data-bs-toggle="pill" data-bs-target="#chart" type="button" role="tab">Chart</button>
    </li>
</ul>

<div class="tab-content">
    <div id="table" class="tab-pane fade show active" role="tabpanel">
        @(
            Html
            .Grid(Model.MeasurementGroups)
            .Build(columns =>
            {
                columns.Add(model => model.Created).Titled("Date/time");
                _ = Model.MeasurementTypes.Select((measurementType, i) =>
                {
                    columns.Add(model => model.Measurements[i]).Formatted("{0:0.###}").Titled(measurementType.Name + ", " + measurementType.Unit);
                    return (object?)null;
                }).ToList();
            })
            .Using(GridFilterMode.Header)
            .Empty("No data found")
            .Sortable()
            .Pageable()
            .Css("table table-striped m-0")
            )
    </div>
    <div id="chart" class="tab-pane fade" role="tabpanel">
        <canvas id="deviceChart"></canvas>
    </div>
</div>

<div class="modal fade" id="informationModal" tabindex="-1" aria-labelledby="informationModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="informationModalLabel">
                    Device information
                </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>To send measurements to this device, send HTTPS POST request to: <small class="text-body-secondary">@Html.Encode(@"https://localhost:7149/api/measurement/add")</small></p>
                <p>Add following headers to your request:</p>
                <div class="bg-body-secondary border mb-3 p-2">
                    <code>
                        @HttpConstants.ApiKeyHeaderName: @Model.Device.ApiKey<br>
                        @HttpConstants.DeviceIdHeaderName: @Model.Device.Id
                    </code>
                </div>
                <p>Add measurements to your request body. Example:</p>
                <div class="bg-body-secondary border mb-3 p-2">
                    <code>
                        @foreach (var measurementType in Model.Device.MeasurementTypes)
                        {
                            @($"\"{measurementType.Variable}\": {Random.Shared.NextDouble() * 100:0.000}")<br>
                        }
                    </code>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/luxon"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon"></script>
    <script type="text/javascript" src="~/js/pages/device.js"></script>
    <script type="text/javascript">
        $(function () {
            DeviceJs.init('@Model.Device.Id');
        });
    </script>
}